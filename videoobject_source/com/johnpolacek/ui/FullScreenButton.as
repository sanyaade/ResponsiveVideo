package com.johnpolacek.ui {		import flash.events.MouseEvent;	import flash.display.Shape;	import flash.display.Sprite;	import com.johnpolacek.shapes.ArrowBlock;	import com.johnpolacek.shapes.EllipseShape;	import com.johnpolacek.shapes.Line;	import com.johnpolacek.shapes.RectangleShape;	/** * FullScreen Toggle Button UI Component  * * Requires adding MouseEvent and handler to go full screen *  * @author John Polacek, john@johnpolacek.com */	 		public class FullScreenButton extends Sprite {				private var growIcon:Sprite = new Sprite();		private var shrinkIcon:Sprite = new Sprite();		private var fullScreenState:Boolean = false;		private var iconSize:Number;		private var iconColor:uint;		private var blockSize:Number;				/** 		* @param w Width (in pixels) of the PlayPauseButton sprite		* @param h Height (in pixels) of the PlayPauseButton sprite. Optimized for 30 pixels.		* @param backgroundColor Background color of the PlayPauseButton sprite. Default 0x000000		* @param buttonColor Button color of the PlayPauseButton sprite. Default 0xFFFFFF		*/			public function FullScreenButton(w:Number, h:Number, backgroundColor:uint = 0x000000, buttonColor:uint = 0xFFFFFF)		{			this.buttonMode = true;			var bgr:Sprite = new RectangleShape(w, h, backgroundColor);						buildGrowIcon(w/10);			buildShrinkIcon(w/10);						growIcon.x = shrinkIcon.x = w/2;			growIcon.y = shrinkIcon.y = h/2 - 1;						addChild(bgr);			addChild(growIcon);			addChild(shrinkIcon);			shrinkIcon.visible = false;		}				private function buildGrowIcon(arrowSize:Number):void		{			var ulArrow:ArrowBlock = new ArrowBlock(arrowSize, 1, 0xFFFFFF, 1, true);			ulArrow.rotation = -90;			ulArrow.x = -arrowSize * 1.2;			ulArrow.y = -arrowSize * 1.2;						var urArrow:ArrowBlock = new ArrowBlock(arrowSize, 1, 0xFFFFFF, 1, true);			urArrow.x = arrowSize * 1.2;			urArrow.y = -arrowSize * 1.2;						var llArrow:ArrowBlock = new ArrowBlock(arrowSize, 1, 0xFFFFFF, 1, true);			llArrow.rotation = 180;			llArrow.x = -arrowSize * 1.2;			llArrow.y = arrowSize * 1.2;						var lrArrow:ArrowBlock = new ArrowBlock(arrowSize, 1, 0xFFFFFF, 1, true);			lrArrow.rotation = 90;			lrArrow.x = arrowSize * 1.2;			lrArrow.y = arrowSize * 1.2;						var center:EllipseShape = new EllipseShape(2, 2, 0xFFFFFF, 1, 0, 0, 0, true);						growIcon.addChild(ulArrow);			growIcon.addChild(urArrow);			growIcon.addChild(llArrow);			growIcon.addChild(lrArrow);			growIcon.addChild(center);		}				private function buildShrinkIcon(arrowSize:Number):void		{			var ulArrow:ArrowBlock = new ArrowBlock(arrowSize, 1, 0xFFFFFF, 1, true);			ulArrow.rotation = 90;			ulArrow.x = -arrowSize * 1.2;			ulArrow.y = -arrowSize * 1.2;						var urArrow:ArrowBlock = new ArrowBlock(arrowSize, 1, 0xFFFFFF, 1, true);			urArrow.rotation = 180;			urArrow.x = arrowSize * 1.2;			urArrow.y = -arrowSize * 1.2;						var llArrow:ArrowBlock = new ArrowBlock(arrowSize, 1, 0xFFFFFF, 1, true);			llArrow.x = -arrowSize * 1.2;			llArrow.y = arrowSize * 1.2;						var lrArrow:ArrowBlock = new ArrowBlock(arrowSize, 1, 0xFFFFFF, 1, true);			lrArrow.rotation = -90;			lrArrow.x = arrowSize * 1.2;			lrArrow.y = arrowSize * 1.2;						var center:EllipseShape = new EllipseShape(2, 2, 0xFFFFFF, 1, 0, 0, 0, true);						shrinkIcon.addChild(ulArrow);			shrinkIcon.addChild(urArrow);			shrinkIcon.addChild(llArrow);			shrinkIcon.addChild(lrArrow);			shrinkIcon.addChild(center);		}				/** Toggles full screen display state. */		public function toggleFullScreenState():void		{			setFullScreenState(!fullScreenState);		}				/** Sets play state. A value of true shows grow icon. (does not transmit UIEvent) */		public function setFullScreenState(fsState:Boolean):void		{			fullScreenState = fsState;			if (fullScreenState)			{				growIcon.visible = false;				shrinkIcon.visible = true;			}			else			{				growIcon.visible = true;				shrinkIcon.visible = false;			}		}			}}