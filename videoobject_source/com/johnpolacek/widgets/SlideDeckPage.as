package com.johnpolacek.widgets {	import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.events.MouseEvent;	import flash.display.DisplayObject;		import com.johnpolacek.events.TrackEvent;		import com.greensock.TweenMax;/** * A class for pages that have simple powerpoint style slide navigation. * * Requires backButton and nextButton SimpleButton instances on stage * and MovieClips on the stage with instance name of container  * which holds all the slides, stacked in order. * * TrackEvent is fired with instance name of slide * * @version  * <b>25 Mar 2011</b>  <br>  * * @author John Polacek, john@johnpolacek.com */	 		public class SlideDeckPage extends MovieClip 	{		/** Container for with MovieClips for each page of content,		  * must be stacked in same order as buttons in nav. **/		public var container:MovieClip = new MovieClip;		public var backButton:SimpleButton;		public var nextButton:SimpleButton;				private var currSlideIndex:int = 0;						public function SlideDeckPage() 		{			backButton.addEventListener(MouseEvent.CLICK, onBackClick);			nextButton.addEventListener(MouseEvent.CLICK, onNextClick);			backButton.visible = false;			for (var i:int = 1; i < container.numChildren; i++)			{				container.getChildAt(i).visible = false;				container.getChildAt(i).alpha = 0;			}		} 				private function onBackClick(event:MouseEvent):void 		{			changeSlide(currSlideIndex-1);		}				private function onNextClick(event:MouseEvent):void 		{			changeSlide(currSlideIndex+1);		}				private function changeSlide(newSlide:int):void		{			TweenMax.to(container.getChildAt(currSlideIndex), .25, {autoAlpha:0});			currSlideIndex = newSlide;			TweenMax.to(container.getChildAt(currSlideIndex), .25, {autoAlpha:1});			backButton.visible = (currSlideIndex != 0);			nextButton.visible = (currSlideIndex+1 != container.numChildren);			dispatchEvent(new TrackEvent(TrackEvent.TRACK, "Content View", container.getChildAt(currSlideIndex).name));		}	}}